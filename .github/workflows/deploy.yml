name: Deploy N8N to DigitalOcean

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  GO_VERSION: '1.21'
  DOCKER_BUILDX_VERSION: 'latest'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://${{ secrets.N8N_DOMAIN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: ${{ env.DOCKER_BUILDX_VERSION }}

      - name: Configure doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry
        run: doctl registry login --expiry-seconds 1200

      - name: Install dependencies
        run: |
          cd ci
          go mod download
          go get golang.org/x/crypto/ssh

      - name: Run deployment
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          DO_SSH_KEY_ID: ${{ secrets.DO_SSH_KEY_ID }}
          DO_SSH_KEY_PATH: ${{ secrets.DO_SSH_KEY_PATH }}
          N8N_DOMAIN: ${{ secrets.N8N_DOMAIN }}
          N8N_BASIC_AUTH_USER: ${{ secrets.N8N_BASIC_AUTH_USER }}
          N8N_BASIC_AUTH_PASSWORD: ${{ secrets.N8N_BASIC_AUTH_PASSWORD }}
          N8N_ENCRYPTION_KEY: ${{ secrets.N8N_ENCRYPTION_KEY }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          ALERT_EMAIL: ${{ secrets.ALERT_EMAIL }}
          CADDY_ACME_EMAIL: ${{ secrets.CADDY_ACME_EMAIL }}
        run: |
          cd ci
          go run main.go

      - name: Verify Deployment
        run: |
          # Wait for the service to be ready
          echo "Waiting for N8N to be available..."
          timeout 300 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' https://${{ secrets.N8N_DOMAIN }})" != "200" ]]; do sleep 5; done' || exit 1
          echo "N8N is now available!"

      - name: Notify Success
        if: success()
        run: |
          if [ ! -z "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
            curl -X POST -H 'Content-type: application/json' \
              --data '{"text":"✅ Successfully deployed N8N to ${{ secrets.N8N_DOMAIN }}"}' \
              ${{ secrets.SLACK_WEBHOOK_URL }}
          fi

      - name: Notify Failure
        if: failure()
        run: |
          if [ ! -z "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
            curl -X POST -H 'Content-type: application/json' \
              --data '{"text":"❌ Failed to deploy N8N to ${{ secrets.N8N_DOMAIN }}"}' \
              ${{ secrets.SLACK_WEBHOOK_URL }}
          fi
