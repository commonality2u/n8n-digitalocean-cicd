name: Deploy n8n

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  # Required secrets
  DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
  DO_SSH_KEY_FINGERPRINT: ${{ secrets.DO_SSH_KEY_FINGERPRINT }}
  DO_SSH_PRIVATE_KEY: ${{ secrets.DO_SSH_PRIVATE_KEY }}
  N8N_DOMAIN: ${{ secrets.N8N_DOMAIN }}
  N8N_ENCRYPTION_KEY: ${{ secrets.N8N_ENCRYPTION_KEY }}

  # Optional with defaults
  DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY || 'registry.digitalocean.com' }}
  DROPLET_NAME: ${{ secrets.DROPLET_NAME || 'n8n-server' }}
  N8N_VERSION: ${{ secrets.N8N_VERSION || 'latest' }}
  N8N_BASIC_AUTH_USER: ${{ secrets.N8N_BASIC_AUTH_USER || 'admin' }}
  N8N_BASIC_AUTH_PASSWORD: ${{ secrets.N8N_BASIC_AUTH_PASSWORD || secrets.N8N_ENCRYPTION_KEY }}
  DO_SSH_KEY_PATH: ${{ secrets.DO_SSH_KEY_PATH || '~/.ssh/id_rsa' }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install dependencies
        run: |
          cd ci
          go mod download

      - name: Verify environment variables
        run: |
          echo "Checking required environment variables..."
          [ -n "$DIGITALOCEAN_ACCESS_TOKEN" ] || { echo "DIGITALOCEAN_ACCESS_TOKEN is not set"; exit 1; }
          [ -n "$DO_SSH_KEY_FINGERPRINT" ] || { echo "DO_SSH_KEY_FINGERPRINT is not set"; exit 1; }
          [ -n "$DO_SSH_PRIVATE_KEY" ] || { echo "DO_SSH_PRIVATE_KEY is not set"; exit 1; }
          [ -n "$N8N_DOMAIN" ] || { echo "N8N_DOMAIN is not set"; exit 1; }
          [ -n "$N8N_ENCRYPTION_KEY" ] || { echo "N8N_ENCRYPTION_KEY is not set"; exit 1; }
          echo "All required environment variables are set"

      - name: Create SSH key file
        run: |
          set -x  # Enable debug mode to see what's happening
          mkdir -p ~/.ssh
          echo "${{ secrets.DO_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          # Add known hosts with retries and verbose output
          for i in {1..3}; do
            echo "Attempt $i: Adding DigitalOcean hosts to known_hosts..."
            if ssh-keyscan -v -H digitalocean.com >> ~/.ssh/known_hosts 2>&1 && \
               ssh-keyscan -v -H registry.digitalocean.com >> ~/.ssh/known_hosts 2>&1; then
              echo "Successfully added hosts to known_hosts"
              break
            else
              echo "Attempt $i failed. Waiting before retry..."
              sleep 5
            fi
            if [ $i -eq 3 ]; then
              echo "Failed to add hosts after 3 attempts"
              exit 1
            fi
          done
          
          # Verify the contents
          echo "Checking SSH directory contents:"
          ls -la ~/.ssh/
          echo "Checking known_hosts content:"
          cat ~/.ssh/known_hosts

      - name: Deploy n8n
        run: |
          cd ci
          go run main.go
